defaults: &defaults
  working_directory: /go/src/github.com/ligato/networkservicemesh
  docker:
    - image: circleci/golang:1.10

version: 2
jobs:
  sanity-check:
    <<: *defaults
    steps:
      - checkout
      - run: sudo apt-get install yamllint shellcheck python3-pkg-resources
      - run: yamllint -c .yamllint.yml $(git ls-files '*.yaml' '*.yml' | grep -v 'vendor/')
      - run: make check dep-check

  build:
    <<: *defaults
    steps:
      - checkout
      - setup_remote_docker
      - run: go install ./vendor/k8s.io/kube-openapi/cmd/openapi-gen
      - run: make verify docker-build

  packet-deploy:
    working_directory: /go/src/github.com/ligato/networkservicemesh
    docker:
      - image: registry.cncf.ci/cncf/cross-cloud/provisioning:production
    steps:
      - checkout
      - run: ./scripts/ci-set-nameserver.sh
      - run: ./scripts/ci-cluster-provision.sh packet-deploy
      - run:
          command: kubectl create -f /cncf/rbac/
          environment:
            KUBECONFIG: /cncf/data/kubeconfig
      - persist_to_workspace:
          root: /cncf/data
          paths:
            - ./*

  packet-integration-tests:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ./data
      - checkout
      - run: sudo ./scripts/ci-set-nameserver.sh
      - run:
          command: ./scripts/circle-integration-tests.sh
          environment:
            KUBECONFIG: /go/src/github.com/ligato/networkservicemesh/data/kubeconfig

  packet-destroy:
    working_directory: /cncf
    docker:
      - image: registry.cncf.ci/cncf/cross-cloud/provisioning:production
    steps:
      - attach_workspace:
          at: ./data
      - run: ./scripts/ci-set-nameserver.sh
      - run: ./scripts/ci-cluster-provision.sh packet-destroy

workflows:
  version: 2
  build-and-test:
    jobs:
      - sanity-check
      - build:
          requires:
            - sanity-check
      - packet-deploy:
          requires:
            - sanity-check
      - packet-integration-tests:
          requires:
            - build
            - packet-deploy
      - packet-destroy:
          requires:
            - packet-integration-tests
