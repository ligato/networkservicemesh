// Code generated by protoc-gen-go. DO NOT EDIT.
// source: netmesh.proto

/*
Package netmesh is a generated protocol buffer package.

It is generated from these files:
	netmesh.proto

It has these top-level messages:
	NetworkServiceEndpoint
	NetworkService
*/
package netmesh

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type NetmeshApiVersion int32

const (
	NetmeshApiVersion_NETMESH_API_VERSION_1 NetmeshApiVersion = 0
)

var NetmeshApiVersion_name = map[int32]string{
	0: "NETMESH_API_VERSION_1",
}
var NetmeshApiVersion_value = map[string]int32{
	"NETMESH_API_VERSION_1": 0,
}

func (x NetmeshApiVersion) String() string {
	return proto.EnumName(NetmeshApiVersion_name, int32(x))
}
func (NetmeshApiVersion) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type NetmeshPayload int32

const (
	NetmeshPayload_NETMESH_PAYLOAD_IP       NetmeshPayload = 0
	NetmeshPayload_NETMESH_PAYLOAD_ETHERNET NetmeshPayload = 1
	NetmeshPayload_NETMESH_PAYLOAD_MPLS     NetmeshPayload = 2
	NetmeshPayload_NETMESH_PAYLOAD_VXLAN    NetmeshPayload = 3
	NetmeshPayload_NETMESH_PAYLOAD_SRV6     NetmeshPayload = 4
)

var NetmeshPayload_name = map[int32]string{
	0: "NETMESH_PAYLOAD_IP",
	1: "NETMESH_PAYLOAD_ETHERNET",
	2: "NETMESH_PAYLOAD_MPLS",
	3: "NETMESH_PAYLOAD_VXLAN",
	4: "NETMESH_PAYLOAD_SRV6",
}
var NetmeshPayload_value = map[string]int32{
	"NETMESH_PAYLOAD_IP":       0,
	"NETMESH_PAYLOAD_ETHERNET": 1,
	"NETMESH_PAYLOAD_MPLS":     2,
	"NETMESH_PAYLOAD_VXLAN":    3,
	"NETMESH_PAYLOAD_SRV6":     4,
}

func (x NetmeshPayload) String() string {
	return proto.EnumName(NetmeshPayload_name, int32(x))
}
func (NetmeshPayload) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type NetworkServiceEndpoint struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Uuid string `protobuf:"bytes,2,opt,name=uuid" json:"uuid,omitempty"`
}

func (m *NetworkServiceEndpoint) Reset()                    { *m = NetworkServiceEndpoint{} }
func (m *NetworkServiceEndpoint) String() string            { return proto.CompactTextString(m) }
func (*NetworkServiceEndpoint) ProtoMessage()               {}
func (*NetworkServiceEndpoint) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *NetworkServiceEndpoint) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *NetworkServiceEndpoint) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

type NetworkService struct {
	Name     string                           `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Uuid     string                           `protobuf:"bytes,2,opt,name=uuid" json:"uuid,omitempty"`
	Selector string                           `protobuf:"bytes,3,opt,name=selector" json:"selector,omitempty"`
	Channels []*NetworkService_NetmeshChannel `protobuf:"bytes,4,rep,name=channels" json:"channels,omitempty"`
	Version  NetmeshApiVersion                `protobuf:"varint,5,opt,name=version,enum=netmesh.NetmeshApiVersion" json:"version,omitempty"`
}

func (m *NetworkService) Reset()                    { *m = NetworkService{} }
func (m *NetworkService) String() string            { return proto.CompactTextString(m) }
func (*NetworkService) ProtoMessage()               {}
func (*NetworkService) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *NetworkService) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *NetworkService) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *NetworkService) GetSelector() string {
	if m != nil {
		return m.Selector
	}
	return ""
}

func (m *NetworkService) GetChannels() []*NetworkService_NetmeshChannel {
	if m != nil {
		return m.Channels
	}
	return nil
}

func (m *NetworkService) GetVersion() NetmeshApiVersion {
	if m != nil {
		return m.Version
	}
	return NetmeshApiVersion_NETMESH_API_VERSION_1
}

type NetworkService_NetmeshChannel struct {
	Name    string         `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Payload NetmeshPayload `protobuf:"varint,2,opt,name=payload,enum=netmesh.NetmeshPayload" json:"payload,omitempty"`
}

func (m *NetworkService_NetmeshChannel) Reset()         { *m = NetworkService_NetmeshChannel{} }
func (m *NetworkService_NetmeshChannel) String() string { return proto.CompactTextString(m) }
func (*NetworkService_NetmeshChannel) ProtoMessage()    {}
func (*NetworkService_NetmeshChannel) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{1, 0}
}

func (m *NetworkService_NetmeshChannel) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *NetworkService_NetmeshChannel) GetPayload() NetmeshPayload {
	if m != nil {
		return m.Payload
	}
	return NetmeshPayload_NETMESH_PAYLOAD_IP
}

func init() {
	proto.RegisterType((*NetworkServiceEndpoint)(nil), "netmesh.NetworkServiceEndpoint")
	proto.RegisterType((*NetworkService)(nil), "netmesh.NetworkService")
	proto.RegisterType((*NetworkService_NetmeshChannel)(nil), "netmesh.NetworkService.NetmeshChannel")
	proto.RegisterEnum("netmesh.NetmeshApiVersion", NetmeshApiVersion_name, NetmeshApiVersion_value)
	proto.RegisterEnum("netmesh.NetmeshPayload", NetmeshPayload_name, NetmeshPayload_value)
}

func init() { proto.RegisterFile("netmesh.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 332 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x52, 0xcd, 0x4e, 0xf2, 0x40,
	0x14, 0xa5, 0xc0, 0xf7, 0x81, 0xd7, 0x48, 0xc6, 0x89, 0xe2, 0x48, 0x5c, 0x10, 0x16, 0x86, 0xb0,
	0x20, 0x01, 0x8d, 0x6b, 0xab, 0x4e, 0x02, 0x09, 0x94, 0x66, 0x4a, 0xaa, 0xae, 0x9a, 0x0a, 0x93,
	0xd0, 0x58, 0x66, 0x9a, 0xb6, 0x60, 0x7c, 0x10, 0x9f, 0xc1, 0xd7, 0x34, 0x6d, 0x69, 0x53, 0x2a,
	0x0b, 0x57, 0xbd, 0xf7, 0xdc, 0xf3, 0xd3, 0x93, 0x0c, 0x9c, 0x08, 0x1e, 0xae, 0x79, 0xb0, 0xea,
	0x7b, 0xbe, 0x0c, 0x25, 0xae, 0xed, 0xd6, 0xce, 0x3d, 0x34, 0x35, 0x1e, 0x7e, 0x48, 0xff, 0xdd,
	0xe0, 0xfe, 0xd6, 0x59, 0x70, 0x2a, 0x96, 0x9e, 0x74, 0x44, 0x88, 0x31, 0x54, 0x85, 0xbd, 0xe6,
	0x44, 0x69, 0x2b, 0xdd, 0x23, 0x16, 0xcf, 0x11, 0xb6, 0xd9, 0x38, 0x4b, 0x52, 0x4e, 0xb0, 0x68,
	0xee, 0x7c, 0x97, 0xa1, 0xb1, 0x6f, 0xf1, 0x57, 0x29, 0x6e, 0x41, 0x3d, 0xe0, 0x2e, 0x5f, 0x84,
	0xd2, 0x27, 0x95, 0x18, 0xcf, 0x76, 0xfc, 0x00, 0xf5, 0xc5, 0xca, 0x16, 0x82, 0xbb, 0x01, 0xa9,
	0xb6, 0x2b, 0xdd, 0xe3, 0xe1, 0x75, 0x3f, 0xed, 0xb0, 0x1f, 0x17, 0xad, 0x11, 0xfc, 0x98, 0xd0,
	0x59, 0xa6, 0xc3, 0xb7, 0x50, 0xdb, 0x72, 0x3f, 0x70, 0xa4, 0x20, 0xff, 0xda, 0x4a, 0xb7, 0x31,
	0x6c, 0xe5, 0x2d, 0xa2, 0xaf, 0xea, 0x39, 0x66, 0xc2, 0x60, 0x29, 0xb5, 0xf5, 0x1c, 0xf7, 0xc9,
	0x39, 0x1e, 0xec, 0x33, 0x80, 0x9a, 0x67, 0x7f, 0xba, 0xd2, 0x4e, 0x2a, 0x35, 0x86, 0x17, 0x45,
	0x6f, 0x3d, 0x39, 0xb3, 0x94, 0xd7, 0xeb, 0xc3, 0xe9, 0xaf, 0x58, 0x7c, 0x09, 0xe7, 0x1a, 0x9d,
	0x4f, 0xa9, 0x31, 0xb2, 0x54, 0x7d, 0x6c, 0x99, 0x94, 0x19, 0xe3, 0x99, 0x66, 0x0d, 0x50, 0xa9,
	0xf7, 0xa5, 0x64, 0x7f, 0xb2, 0xf3, 0xc2, 0x4d, 0xc0, 0x29, 0x5b, 0x57, 0x5f, 0x27, 0x33, 0xf5,
	0xc9, 0x1a, 0xeb, 0xa8, 0x84, 0xaf, 0x80, 0x14, 0x71, 0x3a, 0x1f, 0x51, 0xa6, 0xd1, 0x39, 0x52,
	0x30, 0x81, 0xb3, 0xe2, 0x75, 0xaa, 0x4f, 0x0c, 0x54, 0xce, 0xa7, 0xa7, 0x17, 0xf3, 0x65, 0xa2,
	0x6a, 0xa8, 0x72, 0x48, 0x64, 0x30, 0xf3, 0x0e, 0x55, 0xdf, 0xfe, 0xc7, 0x6f, 0xe8, 0xe6, 0x27,
	0x00, 0x00, 0xff, 0xff, 0xd4, 0xad, 0x92, 0xea, 0x54, 0x02, 0x00, 0x00,
}
