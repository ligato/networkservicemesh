// Code generated by protoc-gen-go. DO NOT EDIT.
// source: nsm.proto

/*
Package nsm is a generated protocol buffer package.

It is generated from these files:
	nsm.proto

It has these top-level messages:
	NetworkServiceEndpoint
	NetworkService
*/
package nsm

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type NsmApiVersion int32

const (
	NsmApiVersion_NSM_API_VERSION_1 NsmApiVersion = 0
)

var NsmApiVersion_name = map[int32]string{
	0: "NSM_API_VERSION_1",
}
var NsmApiVersion_value = map[string]int32{
	"NSM_API_VERSION_1": 0,
}

func (x NsmApiVersion) String() string {
	return proto.EnumName(NsmApiVersion_name, int32(x))
}
func (NsmApiVersion) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type NsmPayload int32

const (
	NsmPayload_NSM_PAYLOAD_IP       NsmPayload = 0
	NsmPayload_NSM_PAYLOAD_ETHERNET NsmPayload = 1
	NsmPayload_NSM_PAYLOAD_MPLS     NsmPayload = 2
	NsmPayload_NSM_PAYLOAD_VXLAN    NsmPayload = 3
	NsmPayload_NSM_PAYLOAD_SRV6     NsmPayload = 4
)

var NsmPayload_name = map[int32]string{
	0: "NSM_PAYLOAD_IP",
	1: "NSM_PAYLOAD_ETHERNET",
	2: "NSM_PAYLOAD_MPLS",
	3: "NSM_PAYLOAD_VXLAN",
	4: "NSM_PAYLOAD_SRV6",
}
var NsmPayload_value = map[string]int32{
	"NSM_PAYLOAD_IP":       0,
	"NSM_PAYLOAD_ETHERNET": 1,
	"NSM_PAYLOAD_MPLS":     2,
	"NSM_PAYLOAD_VXLAN":    3,
	"NSM_PAYLOAD_SRV6":     4,
}

func (x NsmPayload) String() string {
	return proto.EnumName(NsmPayload_name, int32(x))
}
func (NsmPayload) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type NetworkServiceEndpoint struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Uuid string `protobuf:"bytes,2,opt,name=uuid" json:"uuid,omitempty"`
}

func (m *NetworkServiceEndpoint) Reset()                    { *m = NetworkServiceEndpoint{} }
func (m *NetworkServiceEndpoint) String() string            { return proto.CompactTextString(m) }
func (*NetworkServiceEndpoint) ProtoMessage()               {}
func (*NetworkServiceEndpoint) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *NetworkServiceEndpoint) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *NetworkServiceEndpoint) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

type NetworkService struct {
	Name     string                       `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Uuid     string                       `protobuf:"bytes,2,opt,name=uuid" json:"uuid,omitempty"`
	Selector string                       `protobuf:"bytes,3,opt,name=selector" json:"selector,omitempty"`
	Channels []*NetworkService_NsmChannel `protobuf:"bytes,4,rep,name=channels" json:"channels,omitempty"`
	Version  NsmApiVersion                `protobuf:"varint,5,opt,name=version,enum=nsm.NsmApiVersion" json:"version,omitempty"`
}

func (m *NetworkService) Reset()                    { *m = NetworkService{} }
func (m *NetworkService) String() string            { return proto.CompactTextString(m) }
func (*NetworkService) ProtoMessage()               {}
func (*NetworkService) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *NetworkService) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *NetworkService) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *NetworkService) GetSelector() string {
	if m != nil {
		return m.Selector
	}
	return ""
}

func (m *NetworkService) GetChannels() []*NetworkService_NsmChannel {
	if m != nil {
		return m.Channels
	}
	return nil
}

func (m *NetworkService) GetVersion() NsmApiVersion {
	if m != nil {
		return m.Version
	}
	return NsmApiVersion_NSM_API_VERSION_1
}

type NetworkService_NsmChannel struct {
	Name    string     `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Payload NsmPayload `protobuf:"varint,2,opt,name=payload,enum=nsm.NsmPayload" json:"payload,omitempty"`
}

func (m *NetworkService_NsmChannel) Reset()                    { *m = NetworkService_NsmChannel{} }
func (m *NetworkService_NsmChannel) String() string            { return proto.CompactTextString(m) }
func (*NetworkService_NsmChannel) ProtoMessage()               {}
func (*NetworkService_NsmChannel) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 0} }

func (m *NetworkService_NsmChannel) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *NetworkService_NsmChannel) GetPayload() NsmPayload {
	if m != nil {
		return m.Payload
	}
	return NsmPayload_NSM_PAYLOAD_IP
}

func init() {
	proto.RegisterType((*NetworkServiceEndpoint)(nil), "nsm.NetworkServiceEndpoint")
	proto.RegisterType((*NetworkService)(nil), "nsm.NetworkService")
	proto.RegisterType((*NetworkService_NsmChannel)(nil), "nsm.NetworkService.NsmChannel")
	proto.RegisterEnum("nsm.NsmApiVersion", NsmApiVersion_name, NsmApiVersion_value)
	proto.RegisterEnum("nsm.NsmPayload", NsmPayload_name, NsmPayload_value)
}

func init() { proto.RegisterFile("nsm.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 322 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x92, 0x41, 0x4b, 0xc3, 0x40,
	0x10, 0x85, 0x9b, 0xa6, 0xda, 0x76, 0xc4, 0xb8, 0x0e, 0x55, 0x42, 0x0f, 0x52, 0x7a, 0x90, 0x5a,
	0xa4, 0x60, 0x05, 0x0f, 0x9e, 0x0c, 0x1a, 0xb0, 0xd8, 0xa6, 0x61, 0x53, 0x82, 0x9e, 0x42, 0x6c,
	0x17, 0x0c, 0x36, 0xbb, 0x21, 0x9b, 0x56, 0x3c, 0xf8, 0x0b, 0xfc, 0xd3, 0x92, 0xc4, 0xd4, 0x46,
	0x3c, 0x78, 0x9b, 0xfd, 0xe6, 0xcd, 0x7b, 0xef, 0xb0, 0xd0, 0xe4, 0x32, 0x1c, 0x44, 0xb1, 0x48,
	0x04, 0xaa, 0x5c, 0x86, 0xdd, 0x1b, 0x38, 0xb6, 0x58, 0xf2, 0x26, 0xe2, 0x57, 0x87, 0xc5, 0xeb,
	0x60, 0xce, 0x4c, 0xbe, 0x88, 0x44, 0xc0, 0x13, 0x44, 0xa8, 0x71, 0x3f, 0x64, 0xba, 0xd2, 0x51,
	0x7a, 0x4d, 0x9a, 0xcd, 0x29, 0x5b, 0xad, 0x82, 0x85, 0x5e, 0xcd, 0x59, 0x3a, 0x77, 0x3f, 0xab,
	0xa0, 0x95, 0x2d, 0xfe, 0x7b, 0x8a, 0x6d, 0x68, 0x48, 0xb6, 0x64, 0xf3, 0x44, 0xc4, 0xba, 0x9a,
	0xf1, 0xcd, 0x1b, 0xaf, 0xa1, 0x31, 0x7f, 0xf1, 0x39, 0x67, 0x4b, 0xa9, 0xd7, 0x3a, 0x6a, 0x6f,
	0x6f, 0x78, 0x32, 0x48, 0xbb, 0x97, 0xa3, 0x06, 0x96, 0x0c, 0x6f, 0x73, 0x19, 0xdd, 0xe8, 0xf1,
	0x1c, 0xea, 0x6b, 0x16, 0xcb, 0x40, 0x70, 0x7d, 0xa7, 0xa3, 0xf4, 0xb4, 0x21, 0xe6, 0xa7, 0x32,
	0x34, 0xa2, 0xc0, 0xcd, 0x37, 0xb4, 0x90, 0xb4, 0x1f, 0x00, 0x7e, 0x5c, 0xfe, 0xec, 0x7e, 0x06,
	0xf5, 0xc8, 0x7f, 0x5f, 0x0a, 0x3f, 0xaf, 0xaf, 0x0d, 0x0f, 0x0a, 0x3f, 0x3b, 0xc7, 0xb4, 0xd8,
	0xf7, 0x4f, 0x61, 0xbf, 0x14, 0x83, 0x47, 0x70, 0x68, 0x39, 0x13, 0xcf, 0xb0, 0x47, 0x9e, 0x6b,
	0x52, 0x67, 0x34, 0xb5, 0xbc, 0x0b, 0x52, 0xe9, 0x7f, 0x64, 0xa1, 0xdf, 0xe7, 0x88, 0xa0, 0xa5,
	0x22, 0xdb, 0x78, 0x1a, 0x4f, 0x8d, 0x3b, 0x6f, 0x64, 0x93, 0x0a, 0xea, 0xd0, 0xda, 0x66, 0xe6,
	0xec, 0xde, 0xa4, 0x96, 0x39, 0x23, 0x0a, 0xb6, 0x80, 0x6c, 0x6f, 0x26, 0xf6, 0xd8, 0x21, 0xd5,
	0x22, 0xa8, 0xa0, 0xee, 0xe3, 0xd8, 0xb0, 0x88, 0xfa, 0x5b, 0xec, 0x50, 0xf7, 0x8a, 0xd4, 0x9e,
	0x77, 0xb3, 0x2f, 0x70, 0xf9, 0x15, 0x00, 0x00, 0xff, 0xff, 0x66, 0x25, 0xc5, 0x45, 0x0f, 0x02,
	0x00, 0x00,
}
