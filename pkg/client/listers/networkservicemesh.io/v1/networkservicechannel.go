// Copyright (c) 2018 Cisco and/or its affiliates.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at:
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/ligato/networkservicemesh/pkg/apis/networkservicemesh.io/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// NetworkServiceChannelLister helps list NetworkServiceChannels.
type NetworkServiceChannelLister interface {
	// List lists all NetworkServiceChannels in the indexer.
	List(selector labels.Selector) (ret []*v1.NetworkServiceChannel, err error)
	// NetworkServiceChannels returns an object that can list and get NetworkServiceChannels.
	NetworkServiceChannels(namespace string) NetworkServiceChannelNamespaceLister
	NetworkServiceChannelListerExpansion
}

// networkServiceChannelLister implements the NetworkServiceChannelLister interface.
type networkServiceChannelLister struct {
	indexer cache.Indexer
}

// NewNetworkServiceChannelLister returns a new NetworkServiceChannelLister.
func NewNetworkServiceChannelLister(indexer cache.Indexer) NetworkServiceChannelLister {
	return &networkServiceChannelLister{indexer: indexer}
}

// List lists all NetworkServiceChannels in the indexer.
func (s *networkServiceChannelLister) List(selector labels.Selector) (ret []*v1.NetworkServiceChannel, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.NetworkServiceChannel))
	})
	return ret, err
}

// NetworkServiceChannels returns an object that can list and get NetworkServiceChannels.
func (s *networkServiceChannelLister) NetworkServiceChannels(namespace string) NetworkServiceChannelNamespaceLister {
	return networkServiceChannelNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// NetworkServiceChannelNamespaceLister helps list and get NetworkServiceChannels.
type NetworkServiceChannelNamespaceLister interface {
	// List lists all NetworkServiceChannels in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.NetworkServiceChannel, err error)
	// Get retrieves the NetworkServiceChannel from the indexer for a given namespace and name.
	Get(name string) (*v1.NetworkServiceChannel, error)
	NetworkServiceChannelNamespaceListerExpansion
}

// networkServiceChannelNamespaceLister implements the NetworkServiceChannelNamespaceLister
// interface.
type networkServiceChannelNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all NetworkServiceChannels in the indexer for a given namespace.
func (s networkServiceChannelNamespaceLister) List(selector labels.Selector) (ret []*v1.NetworkServiceChannel, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.NetworkServiceChannel))
	})
	return ret, err
}

// Get retrieves the NetworkServiceChannel from the indexer for a given namespace and name.
func (s networkServiceChannelNamespaceLister) Get(name string) (*v1.NetworkServiceChannel, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("networkservicechannel"), name)
	}
	return obj.(*v1.NetworkServiceChannel), nil
}
