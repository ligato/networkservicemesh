// Code generated by protoc-gen-go. DO NOT EDIT.
// source: simpledataplane.proto

package simpledataplane

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import common "github.com/ligato/networkservicemesh/pkg/nsm/apis/common"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Pod struct {
	Metadata             *common.Metadata `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	IpAddress            string           `protobuf:"bytes,2,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Pod) Reset()         { *m = Pod{} }
func (m *Pod) String() string { return proto.CompactTextString(m) }
func (*Pod) ProtoMessage()    {}
func (*Pod) Descriptor() ([]byte, []int) {
	return fileDescriptor_simpledataplane_2110a6503174a33c, []int{0}
}
func (m *Pod) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Pod.Unmarshal(m, b)
}
func (m *Pod) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Pod.Marshal(b, m, deterministic)
}
func (dst *Pod) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Pod.Merge(dst, src)
}
func (m *Pod) XXX_Size() int {
	return xxx_messageInfo_Pod.Size(m)
}
func (m *Pod) XXX_DiscardUnknown() {
	xxx_messageInfo_Pod.DiscardUnknown(m)
}

var xxx_messageInfo_Pod proto.InternalMessageInfo

func (m *Pod) GetMetadata() *common.Metadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *Pod) GetIpAddress() string {
	if m != nil {
		return m.IpAddress
	}
	return ""
}

type BuildConnectRequest struct {
	SourcePod            *Pod     `protobuf:"bytes,1,opt,name=source_pod,json=sourcePod,proto3" json:"source_pod,omitempty"`
	DestinationPod       *Pod     `protobuf:"bytes,2,opt,name=destination_pod,json=destinationPod,proto3" json:"destination_pod,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BuildConnectRequest) Reset()         { *m = BuildConnectRequest{} }
func (m *BuildConnectRequest) String() string { return proto.CompactTextString(m) }
func (*BuildConnectRequest) ProtoMessage()    {}
func (*BuildConnectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_simpledataplane_2110a6503174a33c, []int{1}
}
func (m *BuildConnectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BuildConnectRequest.Unmarshal(m, b)
}
func (m *BuildConnectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BuildConnectRequest.Marshal(b, m, deterministic)
}
func (dst *BuildConnectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuildConnectRequest.Merge(dst, src)
}
func (m *BuildConnectRequest) XXX_Size() int {
	return xxx_messageInfo_BuildConnectRequest.Size(m)
}
func (m *BuildConnectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BuildConnectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BuildConnectRequest proto.InternalMessageInfo

func (m *BuildConnectRequest) GetSourcePod() *Pod {
	if m != nil {
		return m.SourcePod
	}
	return nil
}

func (m *BuildConnectRequest) GetDestinationPod() *Pod {
	if m != nil {
		return m.DestinationPod
	}
	return nil
}

type BuildConnectReply struct {
	Built                bool     `protobuf:"varint,1,opt,name=built,proto3" json:"built,omitempty"`
	BuildError           string   `protobuf:"bytes,2,opt,name=build_error,json=buildError,proto3" json:"build_error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BuildConnectReply) Reset()         { *m = BuildConnectReply{} }
func (m *BuildConnectReply) String() string { return proto.CompactTextString(m) }
func (*BuildConnectReply) ProtoMessage()    {}
func (*BuildConnectReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_simpledataplane_2110a6503174a33c, []int{2}
}
func (m *BuildConnectReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BuildConnectReply.Unmarshal(m, b)
}
func (m *BuildConnectReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BuildConnectReply.Marshal(b, m, deterministic)
}
func (dst *BuildConnectReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuildConnectReply.Merge(dst, src)
}
func (m *BuildConnectReply) XXX_Size() int {
	return xxx_messageInfo_BuildConnectReply.Size(m)
}
func (m *BuildConnectReply) XXX_DiscardUnknown() {
	xxx_messageInfo_BuildConnectReply.DiscardUnknown(m)
}

var xxx_messageInfo_BuildConnectReply proto.InternalMessageInfo

func (m *BuildConnectReply) GetBuilt() bool {
	if m != nil {
		return m.Built
	}
	return false
}

func (m *BuildConnectReply) GetBuildError() string {
	if m != nil {
		return m.BuildError
	}
	return ""
}

func init() {
	proto.RegisterType((*Pod)(nil), "simpledataplane.Pod")
	proto.RegisterType((*BuildConnectRequest)(nil), "simpledataplane.BuildConnectRequest")
	proto.RegisterType((*BuildConnectReply)(nil), "simpledataplane.BuildConnectReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// BuildConnectClient is the client API for BuildConnect service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BuildConnectClient interface {
	RequestBuildConnect(ctx context.Context, in *BuildConnectRequest, opts ...grpc.CallOption) (*BuildConnectReply, error)
}

type buildConnectClient struct {
	cc *grpc.ClientConn
}

func NewBuildConnectClient(cc *grpc.ClientConn) BuildConnectClient {
	return &buildConnectClient{cc}
}

func (c *buildConnectClient) RequestBuildConnect(ctx context.Context, in *BuildConnectRequest, opts ...grpc.CallOption) (*BuildConnectReply, error) {
	out := new(BuildConnectReply)
	err := c.cc.Invoke(ctx, "/simpledataplane.BuildConnect/RequestBuildConnect", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BuildConnectServer is the server API for BuildConnect service.
type BuildConnectServer interface {
	RequestBuildConnect(context.Context, *BuildConnectRequest) (*BuildConnectReply, error)
}

func RegisterBuildConnectServer(s *grpc.Server, srv BuildConnectServer) {
	s.RegisterService(&_BuildConnect_serviceDesc, srv)
}

func _BuildConnect_RequestBuildConnect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BuildConnectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BuildConnectServer).RequestBuildConnect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/simpledataplane.BuildConnect/RequestBuildConnect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BuildConnectServer).RequestBuildConnect(ctx, req.(*BuildConnectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _BuildConnect_serviceDesc = grpc.ServiceDesc{
	ServiceName: "simpledataplane.BuildConnect",
	HandlerType: (*BuildConnectServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RequestBuildConnect",
			Handler:    _BuildConnect_RequestBuildConnect_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "simpledataplane.proto",
}

func init() {
	proto.RegisterFile("simpledataplane.proto", fileDescriptor_simpledataplane_2110a6503174a33c)
}

var fileDescriptor_simpledataplane_2110a6503174a33c = []byte{
	// 310 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x91, 0x4f, 0x4b, 0x2b, 0x31,
	0x14, 0xc5, 0x99, 0x3e, 0xde, 0xa3, 0xbd, 0x7d, 0x58, 0x4d, 0x2b, 0x94, 0x82, 0x58, 0x06, 0x17,
	0x5d, 0xc8, 0x0c, 0xb4, 0x6b, 0x17, 0x2a, 0xdd, 0x08, 0x42, 0x99, 0x2f, 0x30, 0xa4, 0x93, 0x4b,
	0x1b, 0x9a, 0xe4, 0xc6, 0x24, 0xa3, 0xf4, 0x23, 0xf8, 0xad, 0x65, 0xfe, 0x20, 0x6d, 0x15, 0x5d,
	0x25, 0xf9, 0x71, 0xee, 0xc9, 0x39, 0x09, 0x5c, 0x7a, 0xa9, 0xad, 0x42, 0xc1, 0x03, 0xb7, 0x8a,
	0x1b, 0x4c, 0xac, 0xa3, 0x40, 0x6c, 0x70, 0x82, 0x27, 0xcb, 0x8d, 0x0c, 0xdb, 0x72, 0x9d, 0x14,
	0xa4, 0x53, 0x25, 0x37, 0x3c, 0x50, 0x6a, 0x30, 0xbc, 0x91, 0xdb, 0x79, 0x74, 0xaf, 0xb2, 0x40,
	0x8d, 0x7e, 0x9b, 0xda, 0xdd, 0x26, 0x35, 0x5e, 0xa7, 0xdc, 0x4a, 0x9f, 0x16, 0xa4, 0x35, 0x99,
	0x76, 0x69, 0x7c, 0xe3, 0x0c, 0xfe, 0xac, 0x48, 0xb0, 0x5b, 0xe8, 0x6a, 0x0c, 0xbc, 0xb2, 0x1f,
	0x47, 0xd3, 0x68, 0xd6, 0x9f, 0x9f, 0x27, 0xad, 0xee, 0xb9, 0xe5, 0xd9, 0xa7, 0x82, 0x5d, 0x01,
	0x48, 0x9b, 0x73, 0x21, 0x1c, 0x7a, 0x3f, 0xee, 0x4c, 0xa3, 0x59, 0x2f, 0xeb, 0x49, 0x7b, 0xdf,
	0x80, 0xf8, 0x3d, 0x82, 0xe1, 0x43, 0x29, 0x95, 0x78, 0x24, 0x63, 0xb0, 0x08, 0x19, 0xbe, 0x94,
	0xe8, 0x03, 0x5b, 0x00, 0x78, 0x2a, 0x5d, 0x81, 0xb9, 0x25, 0xd1, 0x5e, 0x33, 0x4a, 0x4e, 0xfb,
	0xae, 0x48, 0x64, 0xbd, 0x46, 0x57, 0x25, 0xbb, 0x83, 0x81, 0x40, 0x1f, 0xa4, 0xe1, 0x41, 0x92,
	0xa9, 0x27, 0x3b, 0x3f, 0x4c, 0x9e, 0x1d, 0x88, 0x57, 0x24, 0xe2, 0x27, 0xb8, 0x38, 0x8e, 0x62,
	0xd5, 0x9e, 0x8d, 0xe0, 0xef, 0xba, 0x94, 0x2a, 0xd4, 0x19, 0xba, 0x59, 0x73, 0x60, 0xd7, 0xd0,
	0xaf, 0x36, 0x22, 0x47, 0xe7, 0xc8, 0xb5, 0xb5, 0xa0, 0x46, 0xcb, 0x8a, 0xcc, 0x09, 0xfe, 0x1f,
	0x7a, 0xb1, 0x1c, 0x86, 0x6d, 0xb5, 0x23, 0x7c, 0xf3, 0x25, 0xd8, 0x37, 0x8f, 0x31, 0x89, 0x7f,
	0x51, 0x59, 0xb5, 0x5f, 0xff, 0xab, 0xff, 0x68, 0xf1, 0x11, 0x00, 0x00, 0xff, 0xff, 0xed, 0xf1,
	0x2c, 0x82, 0x14, 0x02, 0x00, 0x00,
}
