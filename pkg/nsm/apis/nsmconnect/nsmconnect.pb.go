// Code generated by protoc-gen-go. DO NOT EDIT.
// source: nsmconnect.proto

package nsmconnect

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import common "github.com/ligato/networkservicemesh/pkg/nsm/apis/common"
import netmesh "github.com/ligato/networkservicemesh/pkg/nsm/apis/netmesh"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// ConnectionRequest is sent by a NSM client to build a connection.
type ConnectionRequest struct {
	// Since connection request will trigger certain actions
	// executed by NSM for a client to address idempotency, request_id
	// will be tracked.
	RequestId            string              `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	NetworkServiceName   string              `protobuf:"bytes,2,opt,name=network_service_name,json=networkServiceName,proto3" json:"network_service_name,omitempty"`
	LinuxNamespace       string              `protobuf:"bytes,3,opt,name=linux_namespace,json=linuxNamespace,proto3" json:"linux_namespace,omitempty"`
	Interface            []*common.Interface `protobuf:"bytes,4,rep,name=interface,proto3" json:"interface,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *ConnectionRequest) Reset()         { *m = ConnectionRequest{} }
func (m *ConnectionRequest) String() string { return proto.CompactTextString(m) }
func (*ConnectionRequest) ProtoMessage()    {}
func (*ConnectionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_nsmconnect_0904730d25bb31f7, []int{0}
}
func (m *ConnectionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConnectionRequest.Unmarshal(m, b)
}
func (m *ConnectionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConnectionRequest.Marshal(b, m, deterministic)
}
func (dst *ConnectionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConnectionRequest.Merge(dst, src)
}
func (m *ConnectionRequest) XXX_Size() int {
	return xxx_messageInfo_ConnectionRequest.Size(m)
}
func (m *ConnectionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ConnectionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ConnectionRequest proto.InternalMessageInfo

func (m *ConnectionRequest) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

func (m *ConnectionRequest) GetNetworkServiceName() string {
	if m != nil {
		return m.NetworkServiceName
	}
	return ""
}

func (m *ConnectionRequest) GetLinuxNamespace() string {
	if m != nil {
		return m.LinuxNamespace
	}
	return ""
}

func (m *ConnectionRequest) GetInterface() []*common.Interface {
	if m != nil {
		return m.Interface
	}
	return nil
}

type ConnectionParameters struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Route                []string `protobuf:"bytes,2,rep,name=route,proto3" json:"route,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConnectionParameters) Reset()         { *m = ConnectionParameters{} }
func (m *ConnectionParameters) String() string { return proto.CompactTextString(m) }
func (*ConnectionParameters) ProtoMessage()    {}
func (*ConnectionParameters) Descriptor() ([]byte, []int) {
	return fileDescriptor_nsmconnect_0904730d25bb31f7, []int{1}
}
func (m *ConnectionParameters) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConnectionParameters.Unmarshal(m, b)
}
func (m *ConnectionParameters) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConnectionParameters.Marshal(b, m, deterministic)
}
func (dst *ConnectionParameters) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConnectionParameters.Merge(dst, src)
}
func (m *ConnectionParameters) XXX_Size() int {
	return xxx_messageInfo_ConnectionParameters.Size(m)
}
func (m *ConnectionParameters) XXX_DiscardUnknown() {
	xxx_messageInfo_ConnectionParameters.DiscardUnknown(m)
}

var xxx_messageInfo_ConnectionParameters proto.InternalMessageInfo

func (m *ConnectionParameters) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *ConnectionParameters) GetRoute() []string {
	if m != nil {
		return m.Route
	}
	return nil
}

// ConnectionReply is sent back by NSM as a reply to ConnectionRequest
// accepted true will indicate that the connection is accepted, otherwise false
// indicates that connection was refused and admission_error will provide details
// why connection was refused.
type ConnectionReply struct {
	Accepted             bool                  `protobuf:"varint,1,opt,name=accepted,proto3" json:"accepted,omitempty"`
	AdmissionError       string                `protobuf:"bytes,2,opt,name=admission_error,json=admissionError,proto3" json:"admission_error,omitempty"`
	ConnectionParameters *ConnectionParameters `protobuf:"bytes,3,opt,name=connection_parameters,json=connectionParameters,proto3" json:"connection_parameters,omitempty"`
	Interface            *common.Interface     `protobuf:"bytes,4,opt,name=interface,proto3" json:"interface,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ConnectionReply) Reset()         { *m = ConnectionReply{} }
func (m *ConnectionReply) String() string { return proto.CompactTextString(m) }
func (*ConnectionReply) ProtoMessage()    {}
func (*ConnectionReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_nsmconnect_0904730d25bb31f7, []int{2}
}
func (m *ConnectionReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConnectionReply.Unmarshal(m, b)
}
func (m *ConnectionReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConnectionReply.Marshal(b, m, deterministic)
}
func (dst *ConnectionReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConnectionReply.Merge(dst, src)
}
func (m *ConnectionReply) XXX_Size() int {
	return xxx_messageInfo_ConnectionReply.Size(m)
}
func (m *ConnectionReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ConnectionReply.DiscardUnknown(m)
}

var xxx_messageInfo_ConnectionReply proto.InternalMessageInfo

func (m *ConnectionReply) GetAccepted() bool {
	if m != nil {
		return m.Accepted
	}
	return false
}

func (m *ConnectionReply) GetAdmissionError() string {
	if m != nil {
		return m.AdmissionError
	}
	return ""
}

func (m *ConnectionReply) GetConnectionParameters() *ConnectionParameters {
	if m != nil {
		return m.ConnectionParameters
	}
	return nil
}

func (m *ConnectionReply) GetInterface() *common.Interface {
	if m != nil {
		return m.Interface
	}
	return nil
}

// DiscoveryRequest requests NSM to send back all available/known NetworkServices
type DiscoveryRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DiscoveryRequest) Reset()         { *m = DiscoveryRequest{} }
func (m *DiscoveryRequest) String() string { return proto.CompactTextString(m) }
func (*DiscoveryRequest) ProtoMessage()    {}
func (*DiscoveryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_nsmconnect_0904730d25bb31f7, []int{3}
}
func (m *DiscoveryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DiscoveryRequest.Unmarshal(m, b)
}
func (m *DiscoveryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DiscoveryRequest.Marshal(b, m, deterministic)
}
func (dst *DiscoveryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DiscoveryRequest.Merge(dst, src)
}
func (m *DiscoveryRequest) XXX_Size() int {
	return xxx_messageInfo_DiscoveryRequest.Size(m)
}
func (m *DiscoveryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DiscoveryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DiscoveryRequest proto.InternalMessageInfo

// DiscoveryRespons carries a list of all available/known to NSM NetworkServices
type DiscoveryResponse struct {
	NetworkService       []*netmesh.NetworkService `protobuf:"bytes,1,rep,name=network_service,json=networkService,proto3" json:"network_service,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *DiscoveryResponse) Reset()         { *m = DiscoveryResponse{} }
func (m *DiscoveryResponse) String() string { return proto.CompactTextString(m) }
func (*DiscoveryResponse) ProtoMessage()    {}
func (*DiscoveryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_nsmconnect_0904730d25bb31f7, []int{4}
}
func (m *DiscoveryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DiscoveryResponse.Unmarshal(m, b)
}
func (m *DiscoveryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DiscoveryResponse.Marshal(b, m, deterministic)
}
func (dst *DiscoveryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DiscoveryResponse.Merge(dst, src)
}
func (m *DiscoveryResponse) XXX_Size() int {
	return xxx_messageInfo_DiscoveryResponse.Size(m)
}
func (m *DiscoveryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DiscoveryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DiscoveryResponse proto.InternalMessageInfo

func (m *DiscoveryResponse) GetNetworkService() []*netmesh.NetworkService {
	if m != nil {
		return m.NetworkService
	}
	return nil
}

func init() {
	proto.RegisterType((*ConnectionRequest)(nil), "nsmconnect.ConnectionRequest")
	proto.RegisterType((*ConnectionParameters)(nil), "nsmconnect.ConnectionParameters")
	proto.RegisterType((*ConnectionReply)(nil), "nsmconnect.ConnectionReply")
	proto.RegisterType((*DiscoveryRequest)(nil), "nsmconnect.DiscoveryRequest")
	proto.RegisterType((*DiscoveryResponse)(nil), "nsmconnect.DiscoveryResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ClientConnectionClient is the client API for ClientConnection service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ClientConnectionClient interface {
	RequestConnection(ctx context.Context, in *ConnectionRequest, opts ...grpc.CallOption) (*ConnectionReply, error)
	RequestDiscovery(ctx context.Context, in *DiscoveryRequest, opts ...grpc.CallOption) (*DiscoveryResponse, error)
}

type clientConnectionClient struct {
	cc *grpc.ClientConn
}

func NewClientConnectionClient(cc *grpc.ClientConn) ClientConnectionClient {
	return &clientConnectionClient{cc}
}

func (c *clientConnectionClient) RequestConnection(ctx context.Context, in *ConnectionRequest, opts ...grpc.CallOption) (*ConnectionReply, error) {
	out := new(ConnectionReply)
	err := c.cc.Invoke(ctx, "/nsmconnect.ClientConnection/RequestConnection", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientConnectionClient) RequestDiscovery(ctx context.Context, in *DiscoveryRequest, opts ...grpc.CallOption) (*DiscoveryResponse, error) {
	out := new(DiscoveryResponse)
	err := c.cc.Invoke(ctx, "/nsmconnect.ClientConnection/RequestDiscovery", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ClientConnectionServer is the server API for ClientConnection service.
type ClientConnectionServer interface {
	RequestConnection(context.Context, *ConnectionRequest) (*ConnectionReply, error)
	RequestDiscovery(context.Context, *DiscoveryRequest) (*DiscoveryResponse, error)
}

func RegisterClientConnectionServer(s *grpc.Server, srv ClientConnectionServer) {
	s.RegisterService(&_ClientConnection_serviceDesc, srv)
}

func _ClientConnection_RequestConnection_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConnectionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientConnectionServer).RequestConnection(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nsmconnect.ClientConnection/RequestConnection",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientConnectionServer).RequestConnection(ctx, req.(*ConnectionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientConnection_RequestDiscovery_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DiscoveryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientConnectionServer).RequestDiscovery(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nsmconnect.ClientConnection/RequestDiscovery",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientConnectionServer).RequestDiscovery(ctx, req.(*DiscoveryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ClientConnection_serviceDesc = grpc.ServiceDesc{
	ServiceName: "nsmconnect.ClientConnection",
	HandlerType: (*ClientConnectionServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RequestConnection",
			Handler:    _ClientConnection_RequestConnection_Handler,
		},
		{
			MethodName: "RequestDiscovery",
			Handler:    _ClientConnection_RequestDiscovery_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "nsmconnect.proto",
}

func init() { proto.RegisterFile("nsmconnect.proto", fileDescriptor_nsmconnect_0904730d25bb31f7) }

var fileDescriptor_nsmconnect_0904730d25bb31f7 = []byte{
	// 446 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x53, 0xcb, 0x6e, 0x13, 0x31,
	0x14, 0xd5, 0x10, 0x1e, 0xcd, 0xad, 0x94, 0x87, 0x15, 0xc4, 0x68, 0x20, 0x52, 0x94, 0x0d, 0x59,
	0xcd, 0xa0, 0xf0, 0x03, 0x48, 0xa5, 0xa0, 0x6e, 0x52, 0x34, 0xa8, 0xeb, 0x91, 0xeb, 0xb9, 0xa4,
	0x56, 0xe3, 0x07, 0xb6, 0x53, 0xe8, 0x7f, 0xb1, 0xe6, 0x53, 0xf8, 0x16, 0x34, 0xb6, 0x33, 0x99,
	0x46, 0xa9, 0x10, 0x2b, 0xc7, 0xe7, 0x9e, 0xdc, 0x7b, 0xce, 0x3d, 0x1e, 0x18, 0x49, 0x2b, 0x98,
	0x92, 0x12, 0x99, 0xcb, 0xb5, 0x51, 0x4e, 0x11, 0xd8, 0x23, 0xd9, 0xe7, 0x35, 0x77, 0x37, 0xdb,
	0xeb, 0x9c, 0x29, 0x51, 0x6c, 0xf8, 0x9a, 0x3a, 0x55, 0x48, 0x74, 0x3f, 0x94, 0xb9, 0xb5, 0x68,
	0xee, 0x38, 0x43, 0x81, 0xf6, 0xa6, 0xd0, 0xb7, 0xeb, 0x42, 0x5a, 0x51, 0x50, 0xcd, 0x6d, 0x53,
	0xf7, 0x60, 0x3c, 0x43, 0xd3, 0xec, 0xfc, 0xff, 0x1b, 0x31, 0x25, 0x84, 0x92, 0xf1, 0x08, 0x6d,
	0xe6, 0xbf, 0x13, 0x18, 0x9f, 0x05, 0x6d, 0x5c, 0xc9, 0x12, 0xbf, 0x6f, 0xd1, 0x3a, 0x32, 0x05,
	0x30, 0xe1, 0x67, 0xc5, 0xeb, 0x34, 0x99, 0x25, 0x8b, 0x7e, 0xd9, 0x8f, 0xc8, 0x45, 0x4d, 0xde,
	0xc1, 0x24, 0xce, 0xaa, 0xe2, 0xb0, 0x4a, 0x52, 0x81, 0xe9, 0x13, 0x4f, 0x24, 0xb1, 0xf6, 0x35,
	0x94, 0x56, 0x54, 0x20, 0x79, 0x0b, 0xc3, 0x0d, 0x97, 0xdb, 0x9f, 0x9e, 0x67, 0x35, 0x65, 0x98,
	0xf6, 0x3c, 0x79, 0xe0, 0xe1, 0xd5, 0x0e, 0x25, 0x05, 0xf4, 0xb9, 0x74, 0x68, 0xbe, 0x35, 0x94,
	0xa7, 0xb3, 0xde, 0xe2, 0x74, 0x39, 0xce, 0xa3, 0xe2, 0x8b, 0x5d, 0xa1, 0xdc, 0x73, 0xe6, 0x9f,
	0x60, 0xb2, 0xd7, 0xff, 0x85, 0x1a, 0x2a, 0xd0, 0xa1, 0xb1, 0x24, 0x85, 0x17, 0xb4, 0xae, 0x0d,
	0x5a, 0x1b, 0xf5, 0xef, 0xae, 0x64, 0x02, 0xcf, 0x8c, 0xda, 0xba, 0x46, 0x6e, 0x6f, 0xd1, 0x2f,
	0xc3, 0x65, 0xfe, 0x27, 0x81, 0x61, 0x77, 0x11, 0x7a, 0x73, 0x4f, 0x32, 0x38, 0xa1, 0x8c, 0xa1,
	0x76, 0x18, 0x96, 0x70, 0x52, 0xb6, 0xf7, 0xc6, 0x11, 0xad, 0x05, 0xb7, 0x96, 0x2b, 0x59, 0xa1,
	0x31, 0xca, 0x44, 0xfb, 0x83, 0x16, 0x3e, 0x6f, 0x50, 0x72, 0x05, 0x2f, 0x59, 0xdb, 0xb7, 0xd2,
	0xad, 0x42, 0xbf, 0x80, 0xd3, 0xe5, 0x2c, 0xef, 0xbc, 0x97, 0x63, 0x4e, 0xca, 0x09, 0x3b, 0xe6,
	0xef, 0x60, 0x51, 0xc9, 0x3f, 0x17, 0x45, 0x60, 0xf4, 0x91, 0x5b, 0xa6, 0xee, 0xd0, 0xdc, 0xc7,
	0x9c, 0xe7, 0x57, 0x30, 0xee, 0x60, 0x56, 0x2b, 0x69, 0x91, 0x7c, 0x80, 0xe1, 0x41, 0xba, 0x69,
	0xe2, 0x83, 0x78, 0x95, 0xef, 0x9e, 0xe0, 0xea, 0x41, 0xc2, 0xe5, 0xe0, 0x61, 0xe2, 0xcb, 0x5f,
	0x09, 0x8c, 0xce, 0x36, 0x1c, 0xa5, 0xdb, 0x1b, 0x22, 0x97, 0x30, 0x8e, 0x63, 0x3b, 0xe0, 0xf4,
	0xb8, 0xfb, 0x48, 0xcc, 0x5e, 0x3f, 0x56, 0x6e, 0xd2, 0xb9, 0x84, 0x51, 0xe4, 0xb5, 0x1e, 0xc8,
	0x9b, 0xee, 0x1f, 0x0e, 0xed, 0x66, 0xd3, 0x47, 0xaa, 0xc1, 0xf8, 0xf5, 0x73, 0xff, 0x49, 0xbc,
	0xff, 0x1b, 0x00, 0x00, 0xff, 0xff, 0x4e, 0x80, 0xce, 0xb5, 0xc2, 0x03, 0x00, 0x00,
}
