---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: test-dataplane
  name: test-dataplane
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app: test-dataplane
  name: test-dataplane
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - list
      - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app: test-dataplane
  name: test-dataplane
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: test-dataplane
subjects:
  - kind: ServiceAccount
    name: test-dataplane
    namespace: default
---
apiVersion: extensions/v1beta1
kind: DaemonSet
spec:
  template:
    metadata:
      labels:
        app: test-dataplane
    spec:
      hostNetwork: true
      hostPID: true
      serviceAccount: test-dataplane
      containers:
        - name: test-dataplane
          image: networkservicemesh/test-dataplane:latest
          imagePullPolicy: IfNotPresent
          securityContext:
            privileged: true
            capabilities:
              add: ["NET_ADMIN"]
          args:
            - --dataplane-socket=/var/lib/networkservicemesh/dataplane.sock
          volumeMounts:
            - name: dataplane-socket
              mountPath: /var/lib/networkservicemesh
            - name: run
              mountPath: /var/run
            - name: sys
              mountPath: /sys
      volumes:
        - hostPath:
            path: /var/lib/networkservicemesh
            type: DirectoryOrCreate
          name: dataplane-socket
        - hostPath:
            path: /var/run
            type: DirectoryOrCreate
          name: run
        - hostPath:
            path: /sys
            type: DirectoryOrCreate
          name: sys
metadata:
  name: test-dataplane
  namespace: default
