syntax = "proto3";

package dataplane;

import "github.com/networkservicemesh/networkservicemesh/controlplane/api/local/connection/connection.proto";
import "github.com/networkservicemesh/networkservicemesh/controlplane/api/remote/connection/connection.proto";
import "github.com/networkservicemesh/networkservicemesh/controlplane/api/crossconnect/crossconnect.proto";
import "ptypes/empty/empty.proto";

// Message sent by dataplane module informing NSM of any changes in its
// operations parameters or constraints
message MechanismUpdate {
  repeated remote.connection.Mechanism remote_mechanisms = 1;
  repeated local.connection.Mechanism local_mechanisms = 2;
}

// Dataplane inlcudes other operations which NSM will request dataplane module
// to execute to establish connectivity requested by NSM clients.
service Dataplane {
  rpc Request(crossconnect.CrossConnect) returns (crossconnect.CrossConnect);
  rpc Close(crossconnect.CrossConnect) returns (google.protobuf.Empty);

}

service MechanismsMonitor {
    rpc MonitorMechanisms (google.protobuf.Empty) returns (stream MechanismUpdate);
}
