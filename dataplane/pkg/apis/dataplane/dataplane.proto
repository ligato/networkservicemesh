syntax = "proto3";

package dataplane;

import "github.com/ligato/networkservicemesh/controlplane/pkg/apis/local/connection/connection.proto";
import "github.com/ligato/networkservicemesh/controlplane/pkg/apis/remote/connection/connection.proto";
import "github.com/golang/protobuf/ptypes/empty/empty.proto";

// Message sent by dataplane module informing NSM of any changes in its
// operations parameters or constraints
message MechanismUpdate {
    repeated remote.connection.Mechanism remote_mechanisms = 1;
    repeated local.connection.Mechanism local_mechanisms = 2;
}

// Dataplane inlcudes other operations which NSM will request dataplane module
// to execute to establish connectivity requested by NSM clients.
service Dataplane {
    rpc Request (CrossConnect) returns (CrossConnect);
    rpc Close (CrossConnect) returns (google.protobuf.Empty);
    rpc MonitorMechanisms(google.protobuf.Empty) returns (stream MechanismUpdate);
    rpc MonitorCrossConnects(google.protobuf.Empty) returns (stream CrossConnect);
}

message CrossConnect {
    string id = 1;
    string payload = 2;
    oneof source {
        local.connection.Connection local_source = 3;
        remote.connection.Connection remote_source = 4;
    }
    oneof destination {
        local.connection.Connection local_destination = 5;
        remote.connection.Connection remote_destination = 6;
    }
}

