// Code generated by protoc-gen-go. DO NOT EDIT.
// source: request_plugin.proto

package plugins

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	networkservice "github.com/networkservicemesh/networkservicemesh/controlplane/pkg/apis/local/networkservice"
	networkservice1 "github.com/networkservicemesh/networkservicemesh/controlplane/pkg/apis/remote/networkservice"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RequestWrapper struct {
	// Types that are valid to be assigned to Impl:
	//	*RequestWrapper_LocalRequest
	//	*RequestWrapper_RemoteRequest
	Impl                 isRequestWrapper_Impl `protobuf_oneof:"impl"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *RequestWrapper) Reset()         { *m = RequestWrapper{} }
func (m *RequestWrapper) String() string { return proto.CompactTextString(m) }
func (*RequestWrapper) ProtoMessage()    {}
func (*RequestWrapper) Descriptor() ([]byte, []int) {
	return fileDescriptor_8f574dac5730b3fe, []int{0}
}

func (m *RequestWrapper) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestWrapper.Unmarshal(m, b)
}
func (m *RequestWrapper) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestWrapper.Marshal(b, m, deterministic)
}
func (m *RequestWrapper) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestWrapper.Merge(m, src)
}
func (m *RequestWrapper) XXX_Size() int {
	return xxx_messageInfo_RequestWrapper.Size(m)
}
func (m *RequestWrapper) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestWrapper.DiscardUnknown(m)
}

var xxx_messageInfo_RequestWrapper proto.InternalMessageInfo

type isRequestWrapper_Impl interface {
	isRequestWrapper_Impl()
}

type RequestWrapper_LocalRequest struct {
	LocalRequest *networkservice.NetworkServiceRequest `protobuf:"bytes,1,opt,name=local_request,json=localRequest,proto3,oneof"`
}

type RequestWrapper_RemoteRequest struct {
	RemoteRequest *networkservice1.NetworkServiceRequest `protobuf:"bytes,2,opt,name=remote_request,json=remoteRequest,proto3,oneof"`
}

func (*RequestWrapper_LocalRequest) isRequestWrapper_Impl() {}

func (*RequestWrapper_RemoteRequest) isRequestWrapper_Impl() {}

func (m *RequestWrapper) GetImpl() isRequestWrapper_Impl {
	if m != nil {
		return m.Impl
	}
	return nil
}

func (m *RequestWrapper) GetLocalRequest() *networkservice.NetworkServiceRequest {
	if x, ok := m.GetImpl().(*RequestWrapper_LocalRequest); ok {
		return x.LocalRequest
	}
	return nil
}

func (m *RequestWrapper) GetRemoteRequest() *networkservice1.NetworkServiceRequest {
	if x, ok := m.GetImpl().(*RequestWrapper_RemoteRequest); ok {
		return x.RemoteRequest
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*RequestWrapper) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*RequestWrapper_LocalRequest)(nil),
		(*RequestWrapper_RemoteRequest)(nil),
	}
}

func init() {
	proto.RegisterType((*RequestWrapper)(nil), "plugins.RequestWrapper")
}

func init() { proto.RegisterFile("request_plugin.proto", fileDescriptor_8f574dac5730b3fe) }

var fileDescriptor_8f574dac5730b3fe = []byte{
	// 249 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x91, 0x41, 0x4b, 0x03, 0x31,
	0x10, 0x85, 0x5d, 0x91, 0x0a, 0xd1, 0xed, 0x21, 0x08, 0xca, 0x9e, 0xc4, 0x93, 0xa0, 0x64, 0xa1,
	0xfe, 0x02, 0x3d, 0x79, 0x12, 0x59, 0x29, 0x1e, 0x4b, 0xba, 0x0e, 0xdb, 0xd0, 0x6c, 0x32, 0x9d,
	0x64, 0xf5, 0x07, 0xfa, 0xc7, 0x84, 0x4c, 0x28, 0xb8, 0x28, 0xec, 0xa1, 0xc7, 0xf7, 0xf2, 0xf8,
	0x66, 0xf2, 0x46, 0x5c, 0x10, 0xec, 0x06, 0x08, 0x71, 0x85, 0x76, 0xe8, 0x8c, 0x53, 0x48, 0x3e,
	0x7a, 0x79, 0xca, 0x2a, 0x54, 0xd8, 0x99, 0xb8, 0x19, 0xd6, 0xaa, 0xf5, 0x7d, 0xed, 0x20, 0x7e,
	0x79, 0xda, 0x06, 0xa0, 0x4f, 0xd3, 0x42, 0x0f, 0x61, 0xf3, 0x97, 0xd5, 0x7a, 0x17, 0xc9, 0x5b,
	0xb4, 0xda, 0x41, 0x8d, 0xdb, 0xae, 0xd6, 0x68, 0x42, 0x6d, 0x7d, 0xab, 0xed, 0x28, 0x3e, 0x92,
	0x3c, 0xba, 0xda, 0x1d, 0x68, 0x22, 0x41, 0xef, 0x23, 0x4c, 0x19, 0x79, 0xf3, 0x5d, 0x88, 0x79,
	0xc3, 0x35, 0xbc, 0x93, 0x46, 0x04, 0x92, 0x8d, 0x28, 0xd3, 0xca, 0xab, 0x5c, 0xcf, 0x55, 0x71,
	0x5d, 0xdc, 0x9e, 0x2d, 0xee, 0x54, 0x72, 0xd5, 0x08, 0xf3, 0xc2, 0xf2, 0x8d, 0x65, 0x46, 0x3d,
	0x1f, 0x35, 0xe7, 0x29, 0x9d, 0xb5, 0x5c, 0x8a, 0x39, 0x2f, 0xb5, 0x87, 0x1e, 0x27, 0xe8, 0xbd,
	0x62, 0x7b, 0x2a, 0xb5, 0xe4, 0x78, 0x36, 0x9e, 0x66, 0xe2, 0xc4, 0xf4, 0x68, 0x17, 0x8d, 0x28,
	0xb3, 0xf5, 0x9a, 0x8e, 0x27, 0x1f, 0x45, 0xb9, 0xc4, 0x0f, 0xbd, 0x4f, 0xca, 0x4b, 0x95, 0xcf,
	0xaa, 0x7e, 0xff, 0xb6, 0xfa, 0xef, 0x61, 0x3d, 0x4b, 0x05, 0x3d, 0xfc, 0x04, 0x00, 0x00, 0xff,
	0xff, 0x27, 0xd1, 0xad, 0x41, 0x26, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RequestPluginClient is the client API for RequestPlugin service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RequestPluginClient interface {
	UpdateRequest(ctx context.Context, in *RequestWrapper, opts ...grpc.CallOption) (*RequestWrapper, error)
}

type requestPluginClient struct {
	cc *grpc.ClientConn
}

func NewRequestPluginClient(cc *grpc.ClientConn) RequestPluginClient {
	return &requestPluginClient{cc}
}

func (c *requestPluginClient) UpdateRequest(ctx context.Context, in *RequestWrapper, opts ...grpc.CallOption) (*RequestWrapper, error) {
	out := new(RequestWrapper)
	err := c.cc.Invoke(ctx, "/plugins.RequestPlugin/UpdateRequest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RequestPluginServer is the server API for RequestPlugin service.
type RequestPluginServer interface {
	UpdateRequest(context.Context, *RequestWrapper) (*RequestWrapper, error)
}

// UnimplementedRequestPluginServer can be embedded to have forward compatible implementations.
type UnimplementedRequestPluginServer struct {
}

func (*UnimplementedRequestPluginServer) UpdateRequest(ctx context.Context, req *RequestWrapper) (*RequestWrapper, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateRequest not implemented")
}

func RegisterRequestPluginServer(s *grpc.Server, srv RequestPluginServer) {
	s.RegisterService(&_RequestPlugin_serviceDesc, srv)
}

func _RequestPlugin_UpdateRequest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestWrapper)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RequestPluginServer).UpdateRequest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/plugins.RequestPlugin/UpdateRequest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RequestPluginServer).UpdateRequest(ctx, req.(*RequestWrapper))
	}
	return interceptor(ctx, in, info, handler)
}

var _RequestPlugin_serviceDesc = grpc.ServiceDesc{
	ServiceName: "plugins.RequestPlugin",
	HandlerType: (*RequestPluginServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UpdateRequest",
			Handler:    _RequestPlugin_UpdateRequest_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "request_plugin.proto",
}
