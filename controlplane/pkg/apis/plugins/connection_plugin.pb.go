// Code generated by protoc-gen-go. DO NOT EDIT.
// source: connection_plugin.proto

package plugins

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	connection "github.com/networkservicemesh/networkservicemesh/controlplane/pkg/apis/local/connection"
	connection1 "github.com/networkservicemesh/networkservicemesh/controlplane/pkg/apis/remote/connection"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ConnectionValidationStatus int32

const (
	ConnectionValidationStatus_SUCCESS ConnectionValidationStatus = 0
	ConnectionValidationStatus_FAIL    ConnectionValidationStatus = 1
)

var ConnectionValidationStatus_name = map[int32]string{
	0: "SUCCESS",
	1: "FAIL",
}

var ConnectionValidationStatus_value = map[string]int32{
	"SUCCESS": 0,
	"FAIL":    1,
}

func (x ConnectionValidationStatus) String() string {
	return proto.EnumName(ConnectionValidationStatus_name, int32(x))
}

func (ConnectionValidationStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_27cc99f2c7bc148f, []int{0}
}

type ConnectionInfo struct {
	// Types that are valid to be assigned to Conn:
	//	*ConnectionInfo_LocalConnection
	//	*ConnectionInfo_RemoteConnection
	Conn                 isConnectionInfo_Conn `protobuf_oneof:"conn"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ConnectionInfo) Reset()         { *m = ConnectionInfo{} }
func (m *ConnectionInfo) String() string { return proto.CompactTextString(m) }
func (*ConnectionInfo) ProtoMessage()    {}
func (*ConnectionInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_27cc99f2c7bc148f, []int{0}
}

func (m *ConnectionInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConnectionInfo.Unmarshal(m, b)
}
func (m *ConnectionInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConnectionInfo.Marshal(b, m, deterministic)
}
func (m *ConnectionInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConnectionInfo.Merge(m, src)
}
func (m *ConnectionInfo) XXX_Size() int {
	return xxx_messageInfo_ConnectionInfo.Size(m)
}
func (m *ConnectionInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ConnectionInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ConnectionInfo proto.InternalMessageInfo

type isConnectionInfo_Conn interface {
	isConnectionInfo_Conn()
}

type ConnectionInfo_LocalConnection struct {
	LocalConnection *connection.Connection `protobuf:"bytes,1,opt,name=local_connection,json=localConnection,proto3,oneof"`
}

type ConnectionInfo_RemoteConnection struct {
	RemoteConnection *connection1.Connection `protobuf:"bytes,2,opt,name=remote_connection,json=remoteConnection,proto3,oneof"`
}

func (*ConnectionInfo_LocalConnection) isConnectionInfo_Conn() {}

func (*ConnectionInfo_RemoteConnection) isConnectionInfo_Conn() {}

func (m *ConnectionInfo) GetConn() isConnectionInfo_Conn {
	if m != nil {
		return m.Conn
	}
	return nil
}

func (m *ConnectionInfo) GetLocalConnection() *connection.Connection {
	if x, ok := m.GetConn().(*ConnectionInfo_LocalConnection); ok {
		return x.LocalConnection
	}
	return nil
}

func (m *ConnectionInfo) GetRemoteConnection() *connection1.Connection {
	if x, ok := m.GetConn().(*ConnectionInfo_RemoteConnection); ok {
		return x.RemoteConnection
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ConnectionInfo) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ConnectionInfo_LocalConnection)(nil),
		(*ConnectionInfo_RemoteConnection)(nil),
	}
}

type ConnectionValidationResult struct {
	Status               ConnectionValidationStatus `protobuf:"varint,1,opt,name=status,proto3,enum=plugins.ConnectionValidationStatus" json:"status,omitempty"`
	ErrorMessage         string                     `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *ConnectionValidationResult) Reset()         { *m = ConnectionValidationResult{} }
func (m *ConnectionValidationResult) String() string { return proto.CompactTextString(m) }
func (*ConnectionValidationResult) ProtoMessage()    {}
func (*ConnectionValidationResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_27cc99f2c7bc148f, []int{1}
}

func (m *ConnectionValidationResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConnectionValidationResult.Unmarshal(m, b)
}
func (m *ConnectionValidationResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConnectionValidationResult.Marshal(b, m, deterministic)
}
func (m *ConnectionValidationResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConnectionValidationResult.Merge(m, src)
}
func (m *ConnectionValidationResult) XXX_Size() int {
	return xxx_messageInfo_ConnectionValidationResult.Size(m)
}
func (m *ConnectionValidationResult) XXX_DiscardUnknown() {
	xxx_messageInfo_ConnectionValidationResult.DiscardUnknown(m)
}

var xxx_messageInfo_ConnectionValidationResult proto.InternalMessageInfo

func (m *ConnectionValidationResult) GetStatus() ConnectionValidationStatus {
	if m != nil {
		return m.Status
	}
	return ConnectionValidationStatus_SUCCESS
}

func (m *ConnectionValidationResult) GetErrorMessage() string {
	if m != nil {
		return m.ErrorMessage
	}
	return ""
}

func init() {
	proto.RegisterEnum("plugins.ConnectionValidationStatus", ConnectionValidationStatus_name, ConnectionValidationStatus_value)
	proto.RegisterType((*ConnectionInfo)(nil), "plugins.ConnectionInfo")
	proto.RegisterType((*ConnectionValidationResult)(nil), "plugins.ConnectionValidationResult")
}

func init() { proto.RegisterFile("connection_plugin.proto", fileDescriptor_27cc99f2c7bc148f) }

var fileDescriptor_27cc99f2c7bc148f = []byte{
	// 346 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x52, 0x4f, 0x4f, 0xfa, 0x30,
	0x18, 0x66, 0xbf, 0x10, 0xf8, 0xf9, 0xa2, 0x38, 0x7b, 0xc1, 0x2c, 0x9a, 0x18, 0xb8, 0x18, 0x0f,
	0x5b, 0x02, 0x47, 0x4f, 0x8a, 0x1a, 0x49, 0x30, 0x31, 0x5b, 0xf0, 0x4a, 0xca, 0xa8, 0xa3, 0xa1,
	0x6b, 0x97, 0xb6, 0xd3, 0x9b, 0x9f, 0xc8, 0x8b, 0xdf, 0xd0, 0xd0, 0x12, 0xbb, 0xc3, 0x20, 0x1e,
	0xbc, 0x75, 0xcf, 0xf3, 0x3e, 0x7f, 0xd6, 0xb7, 0xd0, 0x4b, 0x05, 0xe7, 0x24, 0xd5, 0x54, 0xf0,
	0x79, 0xc1, 0xca, 0x8c, 0xf2, 0xb0, 0x90, 0x42, 0x0b, 0xd4, 0xb6, 0x5f, 0x2a, 0x58, 0x65, 0x54,
	0xaf, 0xca, 0x45, 0x98, 0x8a, 0x3c, 0xe2, 0x44, 0xbf, 0x0b, 0xb9, 0x56, 0x44, 0xbe, 0xd1, 0x94,
	0xe4, 0x44, 0xad, 0xea, 0xa0, 0x54, 0x70, 0x2d, 0x05, 0x2b, 0x18, 0xe6, 0x24, 0x2a, 0xd6, 0x59,
	0x84, 0x0b, 0xaa, 0x22, 0x26, 0x52, 0xcc, 0x22, 0x17, 0x57, 0x39, 0xda, 0xc8, 0x80, 0xfe, 0x51,
	0x92, 0x24, 0xb9, 0xd0, 0x64, 0x5f, 0x54, 0xff, 0xcb, 0x83, 0xee, 0xf8, 0x07, 0x9c, 0xf0, 0x57,
	0x81, 0x26, 0xe0, 0x9b, 0x8a, 0x73, 0x37, 0x7c, 0xea, 0x5d, 0x78, 0x97, 0x9d, 0xe1, 0x59, 0x68,
	0x88, 0xb0, 0xe2, 0xe2, 0xb4, 0x8f, 0x8d, 0xf8, 0xd8, 0xd0, 0x0e, 0x42, 0x53, 0x38, 0xb1, 0x1d,
	0xaa, 0x5e, 0xff, 0x8c, 0xd7, 0x79, 0x68, 0x99, 0x9d, 0x66, 0xbe, 0xe5, 0x1d, 0x76, 0xdb, 0x82,
	0xe6, 0x66, 0xb8, 0xff, 0x01, 0x81, 0x43, 0x5f, 0x30, 0xa3, 0x4b, 0xbc, 0x39, 0xc5, 0x44, 0x95,
	0x4c, 0xa3, 0x6b, 0x68, 0x29, 0x8d, 0x75, 0xa9, 0x4c, 0xe9, 0xee, 0x70, 0x10, 0x6e, 0x17, 0x18,
	0xd6, 0x89, 0x12, 0x33, 0x1a, 0x6f, 0x25, 0x68, 0x00, 0x47, 0x44, 0x4a, 0x21, 0xe7, 0x39, 0x51,
	0x0a, 0x67, 0xc4, 0x94, 0x3d, 0x88, 0x0f, 0x0d, 0xf8, 0x64, 0xb1, 0xab, 0x51, 0x7d, 0xbe, 0xb5,
	0x42, 0x1d, 0x68, 0x27, 0xb3, 0xf1, 0xf8, 0x3e, 0x49, 0xfc, 0x06, 0xfa, 0x0f, 0xcd, 0x87, 0x9b,
	0xc9, 0xd4, 0xf7, 0x86, 0x9f, 0x1e, 0xf8, 0x4e, 0xf5, 0x6c, 0x2a, 0xa1, 0x3b, 0xf0, 0x67, 0xc5,
	0x12, 0x57, 0xff, 0x12, 0xf5, 0x6a, 0xfa, 0x6e, 0xf6, 0x12, 0xec, 0x22, 0x50, 0x0c, 0x68, 0xdb,
	0xe2, 0x57, 0x3e, 0xfb, 0x2f, 0xc4, 0xde, 0xe2, 0xa2, 0x65, 0x9e, 0xc7, 0xe8, 0x3b, 0x00, 0x00,
	0xff, 0xff, 0x54, 0x45, 0x18, 0x02, 0x17, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ConnectionPluginClient is the client API for ConnectionPlugin service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ConnectionPluginClient interface {
	UpdateConnection(ctx context.Context, in *ConnectionInfo, opts ...grpc.CallOption) (*ConnectionInfo, error)
	ValidateConnection(ctx context.Context, in *ConnectionInfo, opts ...grpc.CallOption) (*ConnectionValidationResult, error)
}

type connectionPluginClient struct {
	cc *grpc.ClientConn
}

func NewConnectionPluginClient(cc *grpc.ClientConn) ConnectionPluginClient {
	return &connectionPluginClient{cc}
}

func (c *connectionPluginClient) UpdateConnection(ctx context.Context, in *ConnectionInfo, opts ...grpc.CallOption) (*ConnectionInfo, error) {
	out := new(ConnectionInfo)
	err := c.cc.Invoke(ctx, "/plugins.ConnectionPlugin/UpdateConnection", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *connectionPluginClient) ValidateConnection(ctx context.Context, in *ConnectionInfo, opts ...grpc.CallOption) (*ConnectionValidationResult, error) {
	out := new(ConnectionValidationResult)
	err := c.cc.Invoke(ctx, "/plugins.ConnectionPlugin/ValidateConnection", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ConnectionPluginServer is the server API for ConnectionPlugin service.
type ConnectionPluginServer interface {
	UpdateConnection(context.Context, *ConnectionInfo) (*ConnectionInfo, error)
	ValidateConnection(context.Context, *ConnectionInfo) (*ConnectionValidationResult, error)
}

// UnimplementedConnectionPluginServer can be embedded to have forward compatible implementations.
type UnimplementedConnectionPluginServer struct {
}

func (*UnimplementedConnectionPluginServer) UpdateConnection(ctx context.Context, req *ConnectionInfo) (*ConnectionInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateConnection not implemented")
}
func (*UnimplementedConnectionPluginServer) ValidateConnection(ctx context.Context, req *ConnectionInfo) (*ConnectionValidationResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ValidateConnection not implemented")
}

func RegisterConnectionPluginServer(s *grpc.Server, srv ConnectionPluginServer) {
	s.RegisterService(&_ConnectionPlugin_serviceDesc, srv)
}

func _ConnectionPlugin_UpdateConnection_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConnectionInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConnectionPluginServer).UpdateConnection(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/plugins.ConnectionPlugin/UpdateConnection",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConnectionPluginServer).UpdateConnection(ctx, req.(*ConnectionInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConnectionPlugin_ValidateConnection_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConnectionInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConnectionPluginServer).ValidateConnection(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/plugins.ConnectionPlugin/ValidateConnection",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConnectionPluginServer).ValidateConnection(ctx, req.(*ConnectionInfo))
	}
	return interceptor(ctx, in, info, handler)
}

var _ConnectionPlugin_serviceDesc = grpc.ServiceDesc{
	ServiceName: "plugins.ConnectionPlugin",
	HandlerType: (*ConnectionPluginServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UpdateConnection",
			Handler:    _ConnectionPlugin_UpdateConnection_Handler,
		},
		{
			MethodName: "ValidateConnection",
			Handler:    _ConnectionPlugin_ValidateConnection_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "connection_plugin.proto",
}
